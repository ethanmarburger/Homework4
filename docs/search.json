[
  {
    "objectID": "Homework4.html",
    "href": "Homework4.html",
    "title": "Ethan Marburger Homework 4",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\n/MyData.csv\n\n\nWhat are the major benefits of using R projects?\n\n\nR Projects provide a straightforward way to divide your work inot mulitiple contexts (working directory, workspace, history, and folder/source documents) for easily use. Other benifits of using R Projects is that they are reproducable and can be eaily shared among colleagues.\n\n\nWhat is git and what is github?\n\n\nGit is a form of version conrol software. Github is an online hosting service for git based projects allowing users to store and share repositories.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\nThe two main differences between a tibble and a data frame regard printing and subsetting. When the print() is used on a tibble we information on the number of observations, the columns, and see only the first few rows/columns. Subsetting is much easier on tibbles as it doesn’t require the looping syntax used in data frames.\n\n\nRewrite the following nested function call using BaseR’s chaining operator:\n\n\narrange(filter(select(as_tibble(iris),starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\nRe-writen using BaseR Chaining operator &gt;\n\nlibrary(tibble)\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n#Rewriten code\niris_tbl &lt;- as_tibble(iris) |&gt;\n  select(starts_with(\"Petal\"), Species) |&gt;\n  filter(Petal.Length &lt; 1.55) |&gt;\n  arrange(Species)\n\n\n\n\n\n\n\nRead in data and name the variables\n\n\nlibrary(readr)\n#URL gave me grief... used file name instead\nglass_data &lt;- read_delim(\"glass.data\",\n                         delim = \",\",\n                         col_names = c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Glass_type\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Glass_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nprint(glass_data)\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Glass_type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0             1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0             1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0             1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0             1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0             1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26          1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0             1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0             1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0             1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11          1\n# ℹ 204 more rows\n\n\n\nStart a chain that would overwrite the Type_of_glass variable using mutate(). Create an appropriately named character string version instead.\n\n\nlibrary(dplyr)\nglass_data |&gt;\n  mutate(Glass_type = recode(Glass_type,\n                             \"1\" = \"building_windows_float_processed\",\n                             \"2\" = \"building_windows_non_float_processed\",\n                             \"3\" = \"Vehilce_windows_float_processed\",\n                             \"4\" = \"Vehilce_windows_non_float_processed\",\n                             \"5\" = \"containers\",\n                             \"6\" = \"tableware\",\n                             \"7\" = \"headlamps\"))\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Glass_type       \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    building_windows…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 building_windows…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    building_windows…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    building_windows…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    building_windows…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 building_windows…\n# ℹ 204 more rows\n\nglass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Glass_type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0             1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0             1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0             1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0             1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0             1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26          1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0             1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0             1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0             1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11          1\n# ℹ 204 more rows\n\n\n\nContinue your chain and keep only observations where the Fe variable is less than 0.2 and the Type of Glass is either “tableware” or “headlamp”.\n\n\nglass_data |&gt;\n  mutate(Glass_type = recode(Glass_type,\n                             \"1\" = \"building_windows_float_processed\",\n                             \"2\" = \"building_windows_non_float_processed\",\n                             \"3\" = \"Vehilce_windows_float_processed\",\n                             \"4\" = \"Vehilce_windows_non_float_processed\",\n                             \"5\" = \"containers\",\n                             \"6\" = \"tableware\",\n                             \"7\" = \"headlamps\")) |&gt;\n  filter(Fe &lt; 0.2, Glass_type %in% c(\"tableware\", \"headlamps\"))\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Glass_type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps \n# ℹ 28 more rows\n\n\n\n\n\n\nRead in yeast data and add column names\n\n\n#Reading in data via file name becasue URL gave me a grief\nyeast_data &lt;- read_fwf(\"yeast.data\",\n                       fwf_widths(c(12, 5, 5, 5, 5, 5, 5, 5, 5, 5),\n                                  c('seq_name', 'mcg', 'gvh', 'alm', 'mit', 'erl', 'pox', 'vac', 'nuc', \"class\")))\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\n\nchr (3): seq_name, mit, erl\ndbl (7): mcg, gvh, alm, pox, vac, nuc, class\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm mit   erl     pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 ADT1_YEAST  0.58  0.61   0.4 7  0. 13  0   0.5   0    0.48   0.2\n 2 ADT2_YEAST  0.43  0.67   0.4 8  0. 27  0   0.5   0    0.53   0.2\n 3 ADT3_YEAST  0.64  0.62   0.4 9  0. 15  0   0.5   0    0.53   0.2\n 4 AAR2_YEAST  0.58  0.44   0.5 7  0. 13  0   0.5   0    0.54   0.2\n 5 AATM_YEAST  0.42  0.44   0.4 8  0. 54  0   0.5   0    0.48   0.2\n 6 AATC_YEAST  0.51  0.4    0.5 6  0. 17  0   0.5   0.5  0.49   0.2\n 7 ABC1_YEAST  0.5   0.54   0.4 8  0. 65  0   0.5   0    0.53   0.2\n 8 BAF1_YEAST  0.48  0.45   0.5 9  0. 20  0   0.5   0    0.58   0.3\n 9 ABF2_YEAST  0.55  0.5    0.6 6  0. 36  0   0.5   0    0.49   0.2\n10 ABP1_YEAST  0.4   0.39   0.6 0  0. 15  0   0.5   0    0.58   0.3\n# ℹ 1,474 more rows\n\n\n\nStart a chain that removes the seq_name and nuc columns.\n\n\nyeast_data |&gt;\n  select(-seq_name, -nuc)\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm mit   erl     pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.58  0.61   0.4 7  0. 13  0   0.5   0     0.2\n 2  0.43  0.67   0.4 8  0. 27  0   0.5   0     0.2\n 3  0.64  0.62   0.4 9  0. 15  0   0.5   0     0.2\n 4  0.58  0.44   0.5 7  0. 13  0   0.5   0     0.2\n 5  0.42  0.44   0.4 8  0. 54  0   0.5   0     0.2\n 6  0.51  0.4    0.5 6  0. 17  0   0.5   0.5   0.2\n 7  0.5   0.54   0.4 8  0. 65  0   0.5   0     0.2\n 8  0.48  0.45   0.5 9  0. 20  0   0.5   0     0.3\n 9  0.55  0.5    0.6 6  0. 36  0   0.5   0     0.2\n10  0.4   0.39   0.6 0  0. 15  0   0.5   0     0.3\n# ℹ 1,474 more rows\n\n\n\nContinue your chain to add columns corresponding to the mean and median of each numeric variable(mcg, gvh, alm, mit, erl, pox, and vac) at each class grouping\n\n\n#Continuing chain\nyeast_data &lt;- yeast_data |&gt;\n  select(-seq_name, -nuc) |&gt;\n  mutate(across(where(is.numeric), list(mean = mean, median = median), .names = \"{.col}_{.fn}\"))\nyeast_data\n\n# A tibble: 1,484 × 20\n     mcg   gvh   alm mit   erl     pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61   0.4 7  0. 13  0   0.5   0     0.2    0.500       0.49    0.500\n 2  0.43  0.67   0.4 8  0. 27  0   0.5   0     0.2    0.500       0.49    0.500\n 3  0.64  0.62   0.4 9  0. 15  0   0.5   0     0.2    0.500       0.49    0.500\n 4  0.58  0.44   0.5 7  0. 13  0   0.5   0     0.2    0.500       0.49    0.500\n 5  0.42  0.44   0.4 8  0. 54  0   0.5   0     0.2    0.500       0.49    0.500\n 6  0.51  0.4    0.5 6  0. 17  0   0.5   0.5   0.2    0.500       0.49    0.500\n 7  0.5   0.54   0.4 8  0. 65  0   0.5   0     0.2    0.500       0.49    0.500\n 8  0.48  0.45   0.5 9  0. 20  0   0.5   0     0.3    0.500       0.49    0.500\n 9  0.55  0.5    0.6 6  0. 36  0   0.5   0     0.2    0.500       0.49    0.500\n10  0.4   0.39   0.6 0  0. 15  0   0.5   0     0.3    0.500       0.49    0.500\n# ℹ 1,474 more rows\n# ℹ 9 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;,\n#   class_mean &lt;dbl&gt;, class_median &lt;dbl&gt;\n\n\n\n\n\n\nImporting white wine data set and printing out tibble\n\n\nlibrary(readxl)\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nwhite_wine &lt;- read_excel(\"white-wine.xlsx\",\n                         sheet = excel_sheets(\"white-wine.xlsx\")[1],\n                         col_names = TRUE)\nwhite_wine\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nRename white_wine variables using variables from the second sheet of our white-wine.xlsx file\n\n\n#Reading in the second data sheet\nwhite_wine_variables &lt;- read_excel(\"white-wine.xlsx\",\n                         sheet = excel_sheets(\"white-wine.xlsx\")[2],\n                         col_names = TRUE)\n# renaming the columns of white_wine with variables found in white_wine_variables\nnew_col_names &lt;- white_wine_variables |&gt; pull(1)\nwhite_wine &lt;- white_wine |&gt;\n  setNames(new_col_names)\nprint(white_wine)\n\n# A tibble: 4,898 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nAdd a column to this data set to indicate the wines are white.\n\n\nwhite_wine &lt;- white_wine |&gt;\n  mutate(type = \"white\")\nprint(white_wine)\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nread in red-wine data, replace variables, append column denoting type as “red”\n\n\n#Reading in data\nred_wine &lt;- read.csv(\"red-wine.csv\",\n                     sep = \";\")\n#Replacing column names\nred_wine &lt;- red_wine |&gt;\n  setNames(new_col_names) |&gt;\n#Adding column denoting wine type\n    mutate(type = \"red\")\nprint(red_wine[1, ]) #too many variables to print them all\n\n  fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n1           7.4              0.7           0            1.9     0.076\n  free_sulfur_dioxide total_sulfur_dioxide density   pH sulphates alcohol\n1                  11                   34  0.9978 3.51      0.56     9.4\n  quality type\n1       5  red\n\n\n\nCombine the two data sets into one\n\n\nwine_data &lt;- dplyr::bind_rows(white_wine, red_wine)\nprint(wine_data)\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nStart a chain on your new combined data object to filter the data to only look at high-quality wines (quality &gt; 6.5) and wines that have a reasonable alcohol value (alcohol &lt; 132)\n\n\n#Starting a chain\nwine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132)\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            66             0.16        0.4             1.5     0.044\n 2            66             0.17        0.38            1.5     0.032\n 3            62             0.66        0.48            1.2     0.029\n 4            62             0.66        0.48            1.2     0.029\n 5            64             0.31        0.38            2.9     0.038\n 6            68             0.26        0.42            1.7     0.049\n 7            72             0.32        0.36            2       0.033\n 8            74             0.18        0.31            1.4     0.058\n 9            66             0.25        0.29            1.1     0.068\n10            62             0.16        0.33            1.1     0.057\n# ℹ 1,196 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nContinue your chain to now sort the data from highest quality to lowest.\n\n\n#Continuing chain\nwine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(quality)\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            66             0.16        0.4             1.5     0.044\n 2            66             0.17        0.38            1.5     0.032\n 3            64             0.31        0.38            2.9     0.038\n 4            72             0.32        0.36            2       0.033\n 5            74             0.18        0.31            1.4     0.058\n 6            66             0.25        0.29            1.1     0.068\n 7            62             0.16        0.33            1.1     0.057\n 8            64             0.26        0.24            6.4     0.04 \n 9            71             0.18        0.36            1.4     0.043\n10             7             0.32        0.34            1.3     0.042\n# ℹ 1,196 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nContinue your chain to select only the variables that contain acid, the alcohol variable, the type variable, and the quality variable.\n\n\n#Continuing chain\nwine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(quality) |&gt;\n  select(contains(\"acid\"), alcohol, type)\n\n# A tibble: 1,206 × 5\n   fixed_acidity volatile_acidity citric_acid alcohol type \n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;\n 1            66             0.16        0.4      124 white\n 2            66             0.17        0.38     114 white\n 3            64             0.31        0.38      11 white\n 4            72             0.32        0.36     123 white\n 5            74             0.18        0.31      10 white\n 6            66             0.25        0.29      11 white\n 7            62             0.16        0.33     109 white\n 8            64             0.26        0.24     126 white\n 9            71             0.18        0.36     127 white\n10             7             0.32        0.34      12 white\n# ℹ 1,196 more rows\n\n\n9.Continue your chain to add the mean and standard deviation of the alcohol variable to the data set for each setting of the quality variable.\n\n#Continuing chain\nfinal_wine_data &lt;- wine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(quality) |&gt;\n  select(contains(\"acid\"), alcohol, quality, type) |&gt;\n  mutate(\n    quality_mean = mean(quality, na.rm = TRUE),\n    quality_sd = sd(quality, na.rm = TRUE))\n#Final product of chain\nprint(final_wine_data)\n\n# A tibble: 1,206 × 8\n   fixed_acidity volatile_acidity citric_acid alcohol quality type  quality_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;\n 1            66             0.16        0.4      124       7 white         7.16\n 2            66             0.17        0.38     114       7 white         7.16\n 3            64             0.31        0.38      11       7 white         7.16\n 4            72             0.32        0.36     123       7 white         7.16\n 5            74             0.18        0.31      10       7 white         7.16\n 6            66             0.25        0.29      11       7 white         7.16\n 7            62             0.16        0.33     109       7 white         7.16\n 8            64             0.26        0.24     126       7 white         7.16\n 9            71             0.18        0.36     127       7 white         7.16\n10             7             0.32        0.34      12       7 white         7.16\n# ℹ 1,196 more rows\n# ℹ 1 more variable: quality_sd &lt;dbl&gt;"
  },
  {
    "objectID": "Homework4.html#homework-4",
    "href": "Homework4.html#homework-4",
    "title": "Ethan Marburger Homework 4",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\n/MyData.csv\n\n\nWhat are the major benefits of using R projects?\n\n\nR Projects provide a straightforward way to divide your work inot mulitiple contexts (working directory, workspace, history, and folder/source documents) for easily use. Other benifits of using R Projects is that they are reproducable and can be eaily shared among colleagues.\n\n\nWhat is git and what is github?\n\n\nGit is a form of version conrol software. Github is an online hosting service for git based projects allowing users to store and share repositories.\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\nThe two main differences between a tibble and a data frame regard printing and subsetting. When the print() is used on a tibble we information on the number of observations, the columns, and see only the first few rows/columns. Subsetting is much easier on tibbles as it doesn’t require the looping syntax used in data frames.\n\n\nRewrite the following nested function call using BaseR’s chaining operator:\n\n\narrange(filter(select(as_tibble(iris),starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\nRe-writen using BaseR Chaining operator &gt;\n\nlibrary(tibble)\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n#Rewriten code\niris_tbl &lt;- as_tibble(iris) |&gt;\n  select(starts_with(\"Petal\"), Species) |&gt;\n  filter(Petal.Length &lt; 1.55) |&gt;\n  arrange(Species)\n\n\n\n\n\n\n\nRead in data and name the variables\n\n\nlibrary(readr)\n#URL gave me grief... used file name instead\nglass_data &lt;- read_delim(\"glass.data\",\n                         delim = \",\",\n                         col_names = c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Glass_type\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Glass_type\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nprint(glass_data)\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Glass_type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0             1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0             1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0             1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0             1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0             1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26          1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0             1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0             1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0             1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11          1\n# ℹ 204 more rows\n\n\n\nStart a chain that would overwrite the Type_of_glass variable using mutate(). Create an appropriately named character string version instead.\n\n\nlibrary(dplyr)\nglass_data |&gt;\n  mutate(Glass_type = recode(Glass_type,\n                             \"1\" = \"building_windows_float_processed\",\n                             \"2\" = \"building_windows_non_float_processed\",\n                             \"3\" = \"Vehilce_windows_float_processed\",\n                             \"4\" = \"Vehilce_windows_non_float_processed\",\n                             \"5\" = \"containers\",\n                             \"6\" = \"tableware\",\n                             \"7\" = \"headlamps\"))\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Glass_type       \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    building_windows…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 building_windows…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    building_windows…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    building_windows…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    building_windows…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 building_windows…\n# ℹ 204 more rows\n\nglass_data\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Glass_type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0             1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0             1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0             1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0             1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0             1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26          1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0             1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0             1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0             1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11          1\n# ℹ 204 more rows\n\n\n\nContinue your chain and keep only observations where the Fe variable is less than 0.2 and the Type of Glass is either “tableware” or “headlamp”.\n\n\nglass_data |&gt;\n  mutate(Glass_type = recode(Glass_type,\n                             \"1\" = \"building_windows_float_processed\",\n                             \"2\" = \"building_windows_non_float_processed\",\n                             \"3\" = \"Vehilce_windows_float_processed\",\n                             \"4\" = \"Vehilce_windows_non_float_processed\",\n                             \"5\" = \"containers\",\n                             \"6\" = \"tableware\",\n                             \"7\" = \"headlamps\")) |&gt;\n  filter(Fe &lt; 0.2, Glass_type %in% c(\"tableware\", \"headlamps\"))\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Glass_type\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps \n# ℹ 28 more rows\n\n\n\n\n\n\nRead in yeast data and add column names\n\n\n#Reading in data via file name becasue URL gave me a grief\nyeast_data &lt;- read_fwf(\"yeast.data\",\n                       fwf_widths(c(12, 5, 5, 5, 5, 5, 5, 5, 5, 5),\n                                  c('seq_name', 'mcg', 'gvh', 'alm', 'mit', 'erl', 'pox', 'vac', 'nuc', \"class\")))\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\n\nchr (3): seq_name, mit, erl\ndbl (7): mcg, gvh, alm, pox, vac, nuc, class\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nyeast_data\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm mit   erl     pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 ADT1_YEAST  0.58  0.61   0.4 7  0. 13  0   0.5   0    0.48   0.2\n 2 ADT2_YEAST  0.43  0.67   0.4 8  0. 27  0   0.5   0    0.53   0.2\n 3 ADT3_YEAST  0.64  0.62   0.4 9  0. 15  0   0.5   0    0.53   0.2\n 4 AAR2_YEAST  0.58  0.44   0.5 7  0. 13  0   0.5   0    0.54   0.2\n 5 AATM_YEAST  0.42  0.44   0.4 8  0. 54  0   0.5   0    0.48   0.2\n 6 AATC_YEAST  0.51  0.4    0.5 6  0. 17  0   0.5   0.5  0.49   0.2\n 7 ABC1_YEAST  0.5   0.54   0.4 8  0. 65  0   0.5   0    0.53   0.2\n 8 BAF1_YEAST  0.48  0.45   0.5 9  0. 20  0   0.5   0    0.58   0.3\n 9 ABF2_YEAST  0.55  0.5    0.6 6  0. 36  0   0.5   0    0.49   0.2\n10 ABP1_YEAST  0.4   0.39   0.6 0  0. 15  0   0.5   0    0.58   0.3\n# ℹ 1,474 more rows\n\n\n\nStart a chain that removes the seq_name and nuc columns.\n\n\nyeast_data |&gt;\n  select(-seq_name, -nuc)\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm mit   erl     pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.58  0.61   0.4 7  0. 13  0   0.5   0     0.2\n 2  0.43  0.67   0.4 8  0. 27  0   0.5   0     0.2\n 3  0.64  0.62   0.4 9  0. 15  0   0.5   0     0.2\n 4  0.58  0.44   0.5 7  0. 13  0   0.5   0     0.2\n 5  0.42  0.44   0.4 8  0. 54  0   0.5   0     0.2\n 6  0.51  0.4    0.5 6  0. 17  0   0.5   0.5   0.2\n 7  0.5   0.54   0.4 8  0. 65  0   0.5   0     0.2\n 8  0.48  0.45   0.5 9  0. 20  0   0.5   0     0.3\n 9  0.55  0.5    0.6 6  0. 36  0   0.5   0     0.2\n10  0.4   0.39   0.6 0  0. 15  0   0.5   0     0.3\n# ℹ 1,474 more rows\n\n\n\nContinue your chain to add columns corresponding to the mean and median of each numeric variable(mcg, gvh, alm, mit, erl, pox, and vac) at each class grouping\n\n\n#Continuing chain\nyeast_data &lt;- yeast_data |&gt;\n  select(-seq_name, -nuc) |&gt;\n  mutate(across(where(is.numeric), list(mean = mean, median = median), .names = \"{.col}_{.fn}\"))\nyeast_data\n\n# A tibble: 1,484 × 20\n     mcg   gvh   alm mit   erl     pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61   0.4 7  0. 13  0   0.5   0     0.2    0.500       0.49    0.500\n 2  0.43  0.67   0.4 8  0. 27  0   0.5   0     0.2    0.500       0.49    0.500\n 3  0.64  0.62   0.4 9  0. 15  0   0.5   0     0.2    0.500       0.49    0.500\n 4  0.58  0.44   0.5 7  0. 13  0   0.5   0     0.2    0.500       0.49    0.500\n 5  0.42  0.44   0.4 8  0. 54  0   0.5   0     0.2    0.500       0.49    0.500\n 6  0.51  0.4    0.5 6  0. 17  0   0.5   0.5   0.2    0.500       0.49    0.500\n 7  0.5   0.54   0.4 8  0. 65  0   0.5   0     0.2    0.500       0.49    0.500\n 8  0.48  0.45   0.5 9  0. 20  0   0.5   0     0.3    0.500       0.49    0.500\n 9  0.55  0.5    0.6 6  0. 36  0   0.5   0     0.2    0.500       0.49    0.500\n10  0.4   0.39   0.6 0  0. 15  0   0.5   0     0.3    0.500       0.49    0.500\n# ℹ 1,474 more rows\n# ℹ 9 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;,\n#   class_mean &lt;dbl&gt;, class_median &lt;dbl&gt;\n\n\n\n\n\n\nImporting white wine data set and printing out tibble\n\n\nlibrary(readxl)\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nwhite_wine &lt;- read_excel(\"white-wine.xlsx\",\n                         sheet = excel_sheets(\"white-wine.xlsx\")[1],\n                         col_names = TRUE)\nwhite_wine\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nRename white_wine variables using variables from the second sheet of our white-wine.xlsx file\n\n\n#Reading in the second data sheet\nwhite_wine_variables &lt;- read_excel(\"white-wine.xlsx\",\n                         sheet = excel_sheets(\"white-wine.xlsx\")[2],\n                         col_names = TRUE)\n# renaming the columns of white_wine with variables found in white_wine_variables\nnew_col_names &lt;- white_wine_variables |&gt; pull(1)\nwhite_wine &lt;- white_wine |&gt;\n  setNames(new_col_names)\nprint(white_wine)\n\n# A tibble: 4,898 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nAdd a column to this data set to indicate the wines are white.\n\n\nwhite_wine &lt;- white_wine |&gt;\n  mutate(type = \"white\")\nprint(white_wine)\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nread in red-wine data, replace variables, append column denoting type as “red”\n\n\n#Reading in data\nred_wine &lt;- read.csv(\"red-wine.csv\",\n                     sep = \";\")\n#Replacing column names\nred_wine &lt;- red_wine |&gt;\n  setNames(new_col_names) |&gt;\n#Adding column denoting wine type\n    mutate(type = \"red\")\nprint(red_wine[1, ]) #too many variables to print them all\n\n  fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n1           7.4              0.7           0            1.9     0.076\n  free_sulfur_dioxide total_sulfur_dioxide density   pH sulphates alcohol\n1                  11                   34  0.9978 3.51      0.56     9.4\n  quality type\n1       5  red\n\n\n\nCombine the two data sets into one\n\n\nwine_data &lt;- dplyr::bind_rows(white_wine, red_wine)\nprint(wine_data)\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nStart a chain on your new combined data object to filter the data to only look at high-quality wines (quality &gt; 6.5) and wines that have a reasonable alcohol value (alcohol &lt; 132)\n\n\n#Starting a chain\nwine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132)\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            66             0.16        0.4             1.5     0.044\n 2            66             0.17        0.38            1.5     0.032\n 3            62             0.66        0.48            1.2     0.029\n 4            62             0.66        0.48            1.2     0.029\n 5            64             0.31        0.38            2.9     0.038\n 6            68             0.26        0.42            1.7     0.049\n 7            72             0.32        0.36            2       0.033\n 8            74             0.18        0.31            1.4     0.058\n 9            66             0.25        0.29            1.1     0.068\n10            62             0.16        0.33            1.1     0.057\n# ℹ 1,196 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nContinue your chain to now sort the data from highest quality to lowest.\n\n\n#Continuing chain\nwine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(quality)\n\n# A tibble: 1,206 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            66             0.16        0.4             1.5     0.044\n 2            66             0.17        0.38            1.5     0.032\n 3            64             0.31        0.38            2.9     0.038\n 4            72             0.32        0.36            2       0.033\n 5            74             0.18        0.31            1.4     0.058\n 6            66             0.25        0.29            1.1     0.068\n 7            62             0.16        0.33            1.1     0.057\n 8            64             0.26        0.24            6.4     0.04 \n 9            71             0.18        0.36            1.4     0.043\n10             7             0.32        0.34            1.3     0.042\n# ℹ 1,196 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nContinue your chain to select only the variables that contain acid, the alcohol variable, the type variable, and the quality variable.\n\n\n#Continuing chain\nwine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(quality) |&gt;\n  select(contains(\"acid\"), alcohol, type)\n\n# A tibble: 1,206 × 5\n   fixed_acidity volatile_acidity citric_acid alcohol type \n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;\n 1            66             0.16        0.4      124 white\n 2            66             0.17        0.38     114 white\n 3            64             0.31        0.38      11 white\n 4            72             0.32        0.36     123 white\n 5            74             0.18        0.31      10 white\n 6            66             0.25        0.29      11 white\n 7            62             0.16        0.33     109 white\n 8            64             0.26        0.24     126 white\n 9            71             0.18        0.36     127 white\n10             7             0.32        0.34      12 white\n# ℹ 1,196 more rows\n\n\n9.Continue your chain to add the mean and standard deviation of the alcohol variable to the data set for each setting of the quality variable.\n\n#Continuing chain\nfinal_wine_data &lt;- wine_data |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 132) |&gt;\n  arrange(quality) |&gt;\n  select(contains(\"acid\"), alcohol, quality, type) |&gt;\n  mutate(\n    quality_mean = mean(quality, na.rm = TRUE),\n    quality_sd = sd(quality, na.rm = TRUE))\n#Final product of chain\nprint(final_wine_data)\n\n# A tibble: 1,206 × 8\n   fixed_acidity volatile_acidity citric_acid alcohol quality type  quality_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;\n 1            66             0.16        0.4      124       7 white         7.16\n 2            66             0.17        0.38     114       7 white         7.16\n 3            64             0.31        0.38      11       7 white         7.16\n 4            72             0.32        0.36     123       7 white         7.16\n 5            74             0.18        0.31      10       7 white         7.16\n 6            66             0.25        0.29      11       7 white         7.16\n 7            62             0.16        0.33     109       7 white         7.16\n 8            64             0.26        0.24     126       7 white         7.16\n 9            71             0.18        0.36     127       7 white         7.16\n10             7             0.32        0.34      12       7 white         7.16\n# ℹ 1,196 more rows\n# ℹ 1 more variable: quality_sd &lt;dbl&gt;"
  }
]